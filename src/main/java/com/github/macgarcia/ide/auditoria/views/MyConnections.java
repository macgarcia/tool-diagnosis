package com.github.macgarcia.ide.auditoria.views;

import com.github.macgarcia.ide.auditoria.configuration.Configuration;
import com.github.macgarcia.ide.auditoria.configuration.FactoryMessage;
import com.github.macgarcia.ide.auditoria.configuration.FactoryScreen;
import com.github.macgarcia.ide.auditoria.model.InfoDataBase;
import com.github.macgarcia.ide.auditoria.model.tablemodel.MyConnectionsTableModel;
import com.github.macgarcia.ide.auditoria.ruleConnection.ConnectionControl;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import javax.swing.JDesktopPane;

/**
 *
 * @author macgarcia
 */
public class MyConnections extends javax.swing.JInternalFrame {

    private final Integer DOUBLE_CLICK = 2;

    private MyConnectionsTableModel model;

    /**
     * Creates new form MinhasConexoes
     */
    public MyConnections() {
        initComponents();
        screenConfiguration();
        createTableConnections();
        doubleClickAction();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTableConnections = new javax.swing.JTable();

        setClosable(true);
        setIconifiable(true);

        jTableConnections.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTableConnections);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 488, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 264, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableConnections;
    // End of variables declaration//GEN-END:variables

    private void screenConfiguration() {
        setTitle("My database connetions");
        setResizable(false);
    }

    private void createTableConnections() {
        model = new MyConnectionsTableModel();
        jTableConnections.setModel(model);
        jTableConnections.getTableHeader().setReorderingAllowed(false);
    }

    private void doubleClickAction() {
        jTableConnections.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent e) {
                if (e.getClickCount() == DOUBLE_CLICK) {
                    InfoDataBase info = model.getInfoDataBase(jTableConnections.getSelectedRow());
                    try {
                        ConnectionControl.startConnection(info);
                        FactoryMessage.mensagemOk("Connection established successfully.");
                        JDesktopPane desktopPane = getDesktopPane();
                        Configuration.closeInternalScreen(desktopPane);
                        FactoryScreen.createScreen(Explorer.class, desktopPane);
                    } catch (Exception ex) {
                        FactoryMessage.mensagemAlerta(ex.getMessage());
                    }
                }
            }
        });
    }

}
